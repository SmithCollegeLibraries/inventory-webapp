{"version":3,"sources":["config/endpoints.js","components/alerts.js","util/date.js","util/load.js","components/toastAlerts.js","containers/newTray.js","components/debounce.js","util/search.js","containers/manageCollections.js","containers/users.js","components/header.js","components/login.js","App.js","serviceWorker.js","index.js","image/sis-logo.png"],"names":["base","account","settings","trayAPI","collections","shelfAPI","itemAPI","titlesearch","managetrayupdate","history","contentAlerts","messageType","type","data","error","Alert","name","message","html","position","timeout","success","info","duplicate","tray","barcode","getFormattedDate","date","Date","month","getMonth","day","getDate","hour","getHours","min","getMinutes","sec","getSeconds","getFullYear","load","createAccount","handleAccount","create","getAccount","get","verifyAccount","getUsers","handleUpdate","accountDelete","accountUpdate","newTray","insert","itemSearch","search","itemInFolio","verify","createNewCollection","collectionHasItems","collectionExists","updateCollection","update","deleteCollection","getHistory","page","updateShelf","id","deleteShelf","deleteTrays","historyItems","action","item","boxbarcode","status_change","timestamp","processBarcodes","insertShelf","string","method","fetch","body","JSON","stringify","response","responseHandling","catchError","storage","parse","sessionStorage","getItem","access_token","includes","status","json","statusText","value","e","Alerts","toast","autoClose","hideProgressBar","closeOnClick","failure","warning","warn","initialState","original","collection","barcodes","verified","checkedOnFolio","form","trayValid","trayLength","email","locked","trayReducer","state","remove","filter","_","i","TrayFormVerify","props","Form","FormGroup","Label","for","Input","onChange","handleVerifyOnChange","Object","keys","map","items","idx","key","length","Badge","color","onKeyDown","handleEnter","placeholder","rows","Button","onClick","handleVerifySubmit","TrayFormOriginal","className","handleOriginalOnChange","handleOriginalSubmit","preventDefault","processRequests","ProcessForm","Display","Card","CardBody","removeItem","NewTray","useReducer","dispatch","debouncedSearchTerm","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","handleLocalStorage","local","getLocalItems","handleVerifyBarcodesUnused","Load","results","handleFolioRecordVerify","warned","barcodesToVerify","split","slice","startsWith","Set","size","localforage","handleInspectCollection","handleInspectTray","trim","now","setItem","handleProcess","added","index","window","confirm","filtered","reduce","obj","event","keyCode","target","Array","prototype","indexOf","call","elements","focus","lockCollection","style","paddingTop","marginTop","Row","Col","md","replace","handleDisplayChange","values","currentTarget","contentSearch","setting","autocomplete","traymanagement","shelfmanagement","traySearch","pagingSlips","recordData","searchPost","reports","endpoint","query","searchAleph","getInternalRequests","completed","trayShelfSearch","ill","searchHistory","collectionReducer","ManageCollections","ContentSearch","handleFormSubmit","updateData","newCollections","handleUpdateFormChange","handleUpdateSubmit","handleDeleteSubmit","backgroundColor","padding","textAlign","handleFormChange","DisplayForm","onSubmit","paddingBottom","UserUpdate","users","updatePassword","updateLevel","handleSubmit","handleDelete","Table","password","level","max","UserCreation","createNewAccount","payload","Error","handleCreationChange","handleAccountCreationSubmit","pattern","required","autoFocus","ManageUsers","setUsers","setLevel","setPassword","activeTab","setActiveTab","toggle","tab","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","Header","isOpen","setState","logOut","clear","location","href","Navbar","dark","expand","NavbarBrand","NavbarToggler","this","Collapse","navbar","activeStyle","to","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Component","LoginPage","handleLoginChange","handleLoginSubmit","src","SISLogo","alt","width","height","Main","loggedIn","componentDidMount","localStorage","handleCreateNewPage","access_key","loginPage","basename","path","render","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","headers","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.e49ab1c0.chunk.js","sourcesContent":["const base = \"http://localhost:8888/\"\n\n\nexport const account = `${base}user/`\nexport const settings = `${base}settings/`\nexport const trayAPI = `${base}tray-api/`\nexport const collections = `${base}collection-api/`\nexport const shelfAPI = `${base}shelf-api/`\nexport const itemAPI = `${base}item-api/`\n\nexport const newtray = base + \"tray-api/new-tray/\"\nexport const insertshelf = base + \"shelf-api/shelf-insert/\"\nexport const searchaleph = base + \"tray-api/search-barcode/\"\nexport const searchalephpost = base + \"tray-api/search-barcode-post/\"\nexport const traysearch  = base + \"tray-api/search-tray/\"\nexport const shelfsearch = base + \"shelf-api/search-shelf/\"\nexport const shelfsearchall = base + \"shelf-api/search-all-shelf/\"\nexport const titlesearch = base + \"tray-api/search-title/\"\nexport const oclcsearch = base + \"tray-api/search-oclc/\"\nexport const callnumbersearch = base + \"tray-api/search-call/\"\nexport const managetray = base + \"/tray-api/search-tray-id/\"\nexport const managetrayupdate = base + \"tray-api/tray-status-update/\"\nexport const shelfmanagement = base + \"shelf-api/search-shelf-id/\"\nexport const shelfmanagementupdate = base + \"shelf-api/\"\nexport const pagingslips = base + 'tray-api/paging-slips/'\nexport const internalrequests = base + 'internal-requests/'\nexport const internalrequestscomments = base + 'internal-requests-comments/'\nexport const statistics = base + 'statistics/'\nexport const history = base + 'history/'\nexport const inProcess = base + 'in-process/'\n","import Alert from 'react-s-alert';\n\nclass Alerts {\n\n    messageType = (type, data) => {\n        switch(type){\n            case 'error':\n                this.error(data)\n            break\n            default:\n            break;    \n        }\n    }\n\n    error = (data) => {\n        Alert.error(\n            `<h5>${data.name}</h5><p>${data.message}</p>`, {\n            html: true,\n            position: 'top-left',\n            timeout: 'none',\n        });\n    }\n\n    success = message => {\n        Alert.success(message, {\n            position: 'top-left',\n        })\n    }\n\n    info = message => {\n        Alert.info(message, {\n            position: 'top-left',\n        })\n    }\n\n    duplicate = (tray, barcode) => {\n        Alert.error(\n            `<h5>Duplicate barcode found</h5><ul><li>Tray: ${tray}</li><li>Barcode: ${barcode}</li></ul>`, {\n            html: true,\n            position: 'top-left',\n            timeout: 'none',\n        });\n    }\n}\n\nconst contentAlerts = new Alerts()\nexport default contentAlerts","export function getFormattedDate() {\n    let date = new Date();\n\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    let hour = date.getHours();\n    let min = date.getMinutes();\n    let sec = date.getSeconds();\n\n    month = (month < 10 ? \"0\" : \"\") + month;\n    day = (day < 10 ? \"0\" : \"\") + day;\n    hour = (hour < 10 ? \"0\" : \"\") + hour;\n    min = (min < 10 ? \"0\" : \"\") + min;\n    sec = (sec < 10 ? \"0\" : \"\") + sec;\n\n    return `${date.getFullYear() + \"-\" + month + \"-\" + day + \" \" +  hour + \":\" + min + \":\" + sec}`;\n\n}","import {\n    newtray,\n    managetrayupdate,\n    insertshelf,\n    collections,\n    history,\n    account,\n    // updateEntireTray,\n    trayAPI,\n    shelfAPI,\n    itemAPI,\n    inProcess,\n  } from '../config/endpoints';\nimport Alerts from '../components/alerts';\nimport { getFormattedDate } from '../util/date';\n\n\nclass Load {\n\n  /**\n    * @desc Account management\n  */\n\n  createAccount = async (data) => {\n    const create = await this.handleAccount(`${account}create-account/`, 'POST', data);\n    return create;\n  };\n\n  getAccount = async (data) => {\n    const get = await this.handleAccount(`${account}login/`, 'POST', data);\n    return get;\n  };\n\n  verifyAccount = async (data) => {\n    const get = await this.handleAccount(`${account}account-exists/`, 'GET', data);\n    return get;\n  };\n\n  getUsers = async (data) => {\n    const get = await this.handleUpdate(`${account}get-users/`, 'GET', data);\n    return get;\n  };\n\n  accountDelete = async (data) => {\n    const get = await this.handleUpdate(`${account}delete-users/`, 'POST', data);\n    return get;\n  };\n\n  accountUpdate = async (data) => {\n    const get = await this.handleUpdate(`${account}update-account/`, 'POST', data);\n    return get;\n  };\n\n  /**\n    * @desc Tray\n  */\n\n  newTray = async (data) => {\n    const insert = await this.handleUpdate(`${trayAPI}new-tray/`, 'POST', data);\n    return insert;\n  };\n\n  /**\n    * @desc Item\n  */\n\n  itemSearch = async (data) => {\n    const search = await this.handleUpdate(`${itemAPI}search/`, 'POST', data);\n    return search;\n  };\n\n  // Returns a simple true/false whether an item is in FOLIO\n  itemInFolio = async (barcode) => {\n    const data = {\n      \"barcode\": barcode\n    };\n    const verify = await this.handleUpdate(`${itemAPI}check-folio/`, 'POST', data);\n    return verify;\n  };\n\n  /**\n    * @desc Tray management\n  */\n\n  // transfer = async (data) => {\n  //   const transfer = await this.handleUpdate(`${trayAPI}transfer-tray-items/`, 'POST', data)\n  //   return transfer\n  // }\n\n  // updateEntireTrays = async (data, id) => {\n  //   const update = await this.handleUpdate(updateEntireTray, 'POST', data)\n  //   return update\n  // }\n\n  // deleteTrayAndItems = async (data) => {\n  //   const deleteTray = await this.handleUpdate(`${trayAPI}handle-tray-delete/`, 'POST', data)\n  //   return deleteTray\n  // }\n\n  // deleteTrayAndUnlink = async (data) => {\n  //   const deleteUnlink = await this.handleUpdate(`${trayAPI}handle-tray-delete-and-unlink/`, 'POST', data)\n  //   return deleteUnlink\n  // }\n\n  // updateIndividualTrayItems = async (data) => {\n  //   const update = await this.handleUpdate(`${trayAPI}update-individual-items/`, 'POST', data)\n  //   return update\n  // }\n\n  // deleteIndividualTrayItems = async (data) => {\n  //   const deleteItem = await this.handleUpdate(`${trayAPI}delete-individual-items/`, 'POST', data)\n  //   return deleteItem\n  // }\n\n  // deleteMultiple = async (data) => {\n  //   const deleteMultiple = await this.handleUpdate(`${trayAPI}delete-multiple-barcodes/`, 'POST', data)\n  //   return deleteMultiple\n  // }\n\n  // inProcessPaging = async (data) => {\n  //   return await this.handleUpdate(`${inProcess}create`, 'POST', data)\n  // }\n\n  /**\n    * @desc Collection management\n  */\n\n  createNewCollection = async (data) => {\n    const create = await this.handleUpdate(`${collections}new-collection/`, 'POST', data);\n    return create;\n  }\n\n  collectionHasItems = async (data) => {\n    const get = await this.handleUpdate(`${collections}collection-has-items/`, 'GET', data);\n    return get;\n  }\n\n  collectionExists = async (data) => {\n    const get = await this.handleUpdate(`${collections}collection-exists/`, 'GET', data);\n    return get;\n  }\n\n  updateCollection = async (data) => {\n    const update = await this.handleUpdate(`${collections}update-collection/`, 'POST', data);\n    return update;\n  }\n\n  deleteCollection = async (data) => {\n    const deleteCollection = await this.handleUpdate(`${collections}delete-collection/`, 'POST', data);\n    return deleteCollection;\n  }\n\n  getHistory = async (data, page='') => {\n    const search = await this.handleUpdate(`${history}filter-columns/${page ? `?page=${page}` : ''}`, 'POST', data)\n    return search\n  }\n\n  updateShelf = async (data, id) => {\n    const update = await this.handleUpdate(`${shelfAPI}shelf-update`, 'POST', data)\n    return update\n  }\n\n  deleteShelf = async (data) => {\n    const deleteShelf = await this.handleUpdate(`${shelfAPI}delete-individual-items`, 'POST', data)\n    return deleteShelf\n  }\n\n  newTray = async (data) => {\n    return await this.handleUpdate(newtray, 'POST', data)\n  }\n\n  deleteTrays = async (data, id) => {\n    const historyItems = {\n      action: 'deleted tray',\n      item: data.boxbarcode,\n      status_change: 'deleted',\n      timestamp: getFormattedDate()\n    }\n    this.handleUpdate(`${history}create/`, 'POST', historyItems)\n    const update = await this.handleUpdate(`${managetrayupdate}delete/${id}`, 'DELETE', data)\n    return update\n  }\n\n  processBarcodes = async (data) => {\n    const update = await this.handleUpdate(`${managetrayupdate}`, 'POST', data)\n    return update\n  }\n\n  insertShelf = async (data) => {\n    const update = await this.handleUpdate(insertshelf, 'POST', data)\n    return update\n  }\n\n  handleAccount= async (string, method, data) => {\n    try {\n      let response =  await fetch(string, {\n        method: `${method}`,\n        body: JSON.stringify(data)\n      });\n      return this.responseHandling(response);\n    } catch(e) {\n      this.catchError('', e);\n    }\n  }\n\n  handleUpdate = async (string, method, data) => {\n    const storage = JSON.parse(sessionStorage.getItem('account'));\n    const { account } = storage || '';\n    const { access_token } = account || '';\n    try {\n      let response = await fetch(string.includes('?') ? `${string}&access-token=${access_token}` : `${string}?access-token=${access_token}`, {\n        method: `${method}`,\n        body: JSON.stringify(data)\n      });\n      return this.responseHandling(response);\n    } catch(e) {\n      return this.catchError('', e);\n    }\n  }\n\n  responseHandling = async response => {\n    switch(response.status){\n      case 200:\n      case 201:\n      case 304:\n        return await response.json();\n      case 204:\n        return {};\n      case 400:\n        this.catchError('Bad Request', response.statusText);\n        break;\n      case 401:\n      case 403:\n        this.catchError('Authentication failed', response.statusText);\n        break;\n      case 404:\n        this.catchError(\"Doesn't exist\", response.statusText);\n        break;\n      case 405:\n        this.catchError('Method not allowed', response.statusText);\n        break;\n      case 422:\n        this.catchError('Data Validation Fail', response.statusText);\n        break;\n      case 500:\n        this.catchError('Internal Server error', response.statusText);\n        break;\n      default:\n        this.catchError('There was an error.  Check your internet connection', '');\n    }\n  }\n\n  catchError = (value, e) => {\n    const error = {\n      name: value,\n      message: e\n    }\n    Alerts.error(error)\n  }\n}\n\nconst load = new Load();\nexport default load;\n","import { toast } from 'react-toastify';\n\nexport const success = message => {\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n        });\n    }\n    \nexport const failure = message => {\n        toast.error(message, {\n            position: \"top-right\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n        });\n    }\n\nexport const warning = message => {\n        toast.warn(message, {\n            position: \"top-right\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,  \n        })\n    }","import React, { useState, useEffect, useReducer, Fragment } from 'react';\n// import ContentSearch from '../util/search';\nimport Load from '../util/load';\n// import { getFormattedDate } from '../util/date';\nimport { Button, Form, FormGroup, Label, Input, Col, Row, Card, CardBody, Badge } from 'reactstrap';\nimport localforage from 'localforage';\n// import PropTypes from 'prop-types';\nimport useDebounce from '../components/debounce';\nimport { success, failure, warning } from '../components/toastAlerts';\n\n// TODO: get this number from settings\nconst BARCODE_LENGTH = 15;\n\nconst initialState = {\n  original: {\n    collection: '',\n    tray: '',\n    barcodes: []\n  },\n  verify: {\n    tray: '',\n    barcodes: []\n  },\n  // List of trays that have been verified\n  verified: [],\n  // Lists barcodes already checked on FOLIO, so we don't have to spam the server with API calls\n  checkedOnFolio: [],\n  form: 'original',\n  trayValid: false,\n  trayLength: 8,\n  timeout: 0,\n  email: '',\n  locked: false\n};\n\nconst trayReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ORIGINAL':\n      return {\n        ...state,\n        original: action.original\n      };\n    case 'CHECKED_ON_FOLIO':\n      return {\n        ...state,\n        checkedOnFolio: action.checkedOnFolio\n      };\n    case 'ADD_VERIFY':\n      return {\n        ...state,\n        verify: action.verify\n      };\n    case 'ADD_VERIFIED':\n      return {\n        ...state,\n        verified: action.verified\n      };\n    case 'LOCAL_VERIFIED':\n      return {\n        ...state,\n        verified: action.verified\n      };\n    case 'CHANGE_FORM':\n      return {\n        ...state,\n        form: action.form\n      };\n    case 'UPDATE_TRAY_LENGTH':\n      return {\n        ...state,\n        trayLength: action.trayLength\n      };\n    case 'REMOVE_ITEM':\n      const remove = action.verified.filter((_, i) => i !== action.id);\n      return {\n        ...state,\n        verified: remove\n      }\n    case 'RESET':\n      return {\n        ...state,\n        form: \"original\",\n        original: {\n          collection: state.locked === true ? state.original.collection : '',\n          tray: '',\n          barcodes: []\n        },\n        verify: {\n          collection: state.locked === true ? state.verify.collection : '',\n          tray: '',\n          barcodes: []\n        }\n      };\n    case 'LOCK_COLLECTION':\n      return {\n        ...state,\n        locked: !state.locked\n      };\n    default:\n      return state;\n  }\n};\n\nconst NewTray = (props) => {\n  const [data, dispatch] = useReducer(trayReducer, initialState);\n\n  const debouncedSearchTerm = useDebounce(data.original.barcodes, 500);\n\n  // Anytime the DOM is updated, update local storage\n  useEffect(() => {\n    const getLocalItems = async () => {\n      const local = await handleLocalStorage('tray') || [];\n      dispatch({ type: 'LOCAL_VERIFIED', verified: local});\n    };\n    getLocalItems();\n  }, []);\n\n  useEffect(() => {\n    if (props) {\n      // const { settings } = props || '';\n      // Assume the length of a tray barcode is 8; otherwise,\n      // get the value from settings\n      // TODO: Get this value from settings\n      let trayLength = 8;\n      // if (settings !== \"\") {\n      //   Object.keys(settings).map(items => {\n      //     if (settings[items].type === 'tray_barcode_length') {\n      //       trayLength = parseInt(settings[items].value);\n      //     }\n      //   });\n      // }\n      dispatch({ type: 'UPDATE_TRAY_LENGTH', trayLength: trayLength});\n    }\n  },[props]);\n\n  useEffect(() => {\n    const handleVerifyBarcodesUnused = async (barcodes) => {\n      const data = {\n        barcodes: barcodes\n      };\n      const results = await Load.itemSearch(data);\n      if (results && results[0] && results[0][\"id\"]) {\n        results.map(item => {\n          // TODO: Give more details on which tray and collection the item is in\n          failure(`${item[\"barcode\"]} is already trayed`);\n          return false;\n        });\n      } else {\n        return true;\n      }\n    };\n\n    // Gives an alert to the user if a barcode has been entered that\n    // doesn't exist in FOLIO. Only shows this warning once per barcode.\n    // Once checked, barcodes are saved in state so that multiple API\n    // calls aren't made to the FOLIO server every time the input field\n    // is changed.\n    const handleFolioRecordVerify = async (barcodes) => {\n      for (const barcode of barcodes) {\n        if (!data.checkedOnFolio.includes(barcode)) {\n          const itemInFolio = await Load.itemInFolio(barcode);\n          if (!itemInFolio) {\n            warning(`Unable to locate FOLIO record for ${barcode}. Please verify record exists before submitting this barcode`);\n          }\n          dispatch({ type: 'CHECKED_ON_FOLIO', checkedOnFolio: [...data.checkedOnFolio, barcode]});\n        }\n      }\n    };\n\n    let warned = false;\n    if (debouncedSearchTerm && debouncedSearchTerm.length > 0) {\n      // Remove the last item: either it's empty, in which case we\n      // don't want to do anything with the empty barcode, or it's an\n      // unfinished barcode, in which case we don't want to verify it\n      const barcodesToVerify = debouncedSearchTerm.split('\\n').slice(0, -1);\n      for (const barcode of barcodesToVerify) {\n        if (barcode !== '') {\n          if (!barcode.startsWith('3101')) {\n            warning(`${barcode} does not begin with 3101`);\n            warned = true;\n          } else if (barcode.length !== BARCODE_LENGTH) {\n            warning(`${barcode} must be ${BARCODE_LENGTH} characters long. You currently have ${barcode.length}`);\n            warned = true;\n          }\n        }\n      }\n      if (!warned) {\n        let barcodesUnused = handleVerifyBarcodesUnused(barcodesToVerify);\n        if (barcodesUnused) {\n          handleFolioRecordVerify(barcodesToVerify);\n        }\n      }\n      // Show error if duplicate barcode exists\n      if ((new Set(barcodesToVerify)).size !== barcodesToVerify.length) {\n        // TODO: Show which barcode is duplicated\n        failure(\"Duplicate barcode detected\");\n      }\n    }\n  },[debouncedSearchTerm]);\n\n  const handleLocalStorage = async (key) => {\n    const results = await localforage.getItem(key);\n    return results;\n  }\n\n  const handleOriginalOnChange = e => {\n    e.preventDefault();\n    let value = e.target.value;\n    // Automatically remove non-numeric characters from tray field\n    if (e.target.name === 'tray') {\n      value = e.target.value.replace(/\\D/g,'');\n    }\n    const original = data.original;\n    original[e.target.name] = value;\n    dispatch({ type: 'ADD_ORIGINAL', original: original});\n  }\n\n  const handleOriginalSubmit = e => {\n    e.preventDefault();\n    // TODO: Automatically add newline to the end of this form if necessary\n    if (handleInspectCollection() && handleInspectTray()) {\n      dispatch({ type: 'CHANGE_FORM', form: 'verify'});\n    }\n  };\n\n  const handleInspectCollection = () => {\n    const { original } = data;\n    if (!original.collection) {\n      failure(`You must select a collection`);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleInspectTray = () => {\n    const { original, trayLength } = data;\n    if (original.tray.length !== trayLength) {\n      failure(`Tray barcode must be ${trayLength} characters`);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleVerifyOnChange = e => {\n    e.preventDefault();\n    const verify = data.verify;\n    let value = e.target.value;\n    // Automatically remove non-numeric characters from tray field\n    if (e.target.name === 'tray') {\n      value = e.target.value.replace(/\\D/g,'');\n    }\n    verify[e.target.name] = value;\n    dispatch({ type: 'ADD_VERIFY', verify: verify});\n  };\n\n  const handleVerifySubmit = e => {\n    e.preventDefault()\n    // TODO: Do a diff on the original and verify so that it's clear which\n    // barcode is the problem\n    if (data.original.tray.trim() !== data.verify.tray.trim()) {\n      failure('Mismatch! \\n Original tray: \\n' + data.original.tray + ' \\n Verify tray: \\n' + data.verify.tray);\n    } else if (data.original.barcodes.trim() !== data.verify.barcodes.trim()) {\n      failure('Mismatch! \\n Original barcodes: \\n' + data.original.barcodes + ' \\n Verify barcodes: \\n' + data.verify.barcodes);\n    } else {\n      let verified = data.verified;\n      verified[Date.now()] = {\n        collection: data.original.collection,\n        tray: data.verify.tray,\n        barcodes: data.verify.barcodes\n      };\n      localforage.setItem('tray', verified);\n      dispatch({ type: 'ADD_VERIFIED', verified: verified});\n      dispatch({ type: \"RESET\" });\n    }\n  };\n\n  const handleDisplayChange = (e, key) => {\n    const verified = data.verified;\n    const values = {\n      ...verified[key],\n      [e.currentTarget.name]: e.currentTarget.value,\n    };\n\n    verified[key] = values;\n    localforage.setItem('tray', verified);\n    dispatch({ type: 'ADD_VERIFIED', verified: verified});\n  };\n\n  const handleProcess = async (e) => {\n    e.preventDefault();\n    Object.keys(data.verified).map(async (items, idx) => {\n      const load = await Load.newTray(data.verified[items]);\n      if (load === true) {\n        success(`${data.verified[items].tray} successfully added`);\n        removeItem(items);\n      } else {\n        failure(`${load.barcode} in tray ${load.boxbarcode} was already added on ${load.added}`);\n      }\n    })\n  };\n\n  const removeItem = (index) => {\n    if (window.confirm('Are you sure you want to delete this tray? This action cannot be undone.')) {\n      dispatch({ type: 'REMOVE_ITEM', id: index});\n      // Create list of verified trays staged for submission,\n      // without the tray that was just removed\n      const filtered = Object.keys(data.verified)\n        .filter(key => key !== index)\n        .reduce((obj, key) => {\n          obj[key] = data.verified[key];\n          return obj;\n        }, {});\n      dispatch({ type: 'ADD_VERIFIED', verified: filtered});\n      localforage.setItem('tray', filtered);\n    }\n  };\n\n  const handleEnter = (event) => {\n    if (event.keyCode === 13) {\n      const form = event.target.form;\n      const index = Array.prototype.indexOf.call(form, event.target);\n      form.elements[index + 1].focus();\n      event.preventDefault();\n    }\n  };\n\n  const lockCollection = e => {\n    dispatch({ type: 'LOCK_COLLECTION' });\n  };\n\n  const clearDisplayGrid = e => {\n    if (window.confirm('Are you sure you want to clear all currently staged trays? This action cannot be undone.')) {\n      dispatch({ type: \"RESET\" });\n      dispatch({ type: 'ADD_VERIFIED', verified: []});\n      localforage.setItem('tray', {});\n    }\n  };\n\n  return (\n    <Fragment>\n      <div style={{paddingTop: \"10px\"}}>\n        <Button color={data.locked ? \"success\" : \"primary\"} onClick={(e) => lockCollection(e)}>{data.locked ? \"Collection locked\" : \"Lock collection\"}</Button>{' '}\n        <Button color=\"warning\" onClick={(e) => clearDisplayGrid(e)}>Clear all</Button>\n      </div>\n      <div style={{marginTop: \"50px\"}}>\n        <Row>\n          <Col md=\"4\">\n            <Card>\n              <CardBody>\n              <TrayFormOriginal\n                handleOriginalOnChange={handleOriginalOnChange}\n                collections={props.collections}\n                handleOriginalSubmit={handleOriginalSubmit}\n                processRequests={handleProcess}\n                verified={data.verified}\n                trayLength={data.trayLength}\n                original={data.original}\n                handleEnter={handleEnter}\n                lockCollection={lockCollection}\n                handleVerifySubmit={handleVerifySubmit}\n              />\n              </CardBody>\n            </Card>\n          </Col>\n          { data.form !== 'original'\n            ? <Col md=\"4\">\n                <Card>\n                  <CardBody>\n                  <TrayFormVerify\n                    handleVerifyOnChange={handleVerifyOnChange}\n                    collections={props.collections}\n                    handleVerifySubmit={handleVerifySubmit}\n                    original={data.original}\n                    trayLength={data.trayLength}\n                    verify={data.verify}\n                    handleEnter={handleEnter}\n                  />\n                  </CardBody>\n                </Card>\n              </Col>\n            : ''\n          }\n          <Col>\n            <Display\n              data={data.verified}\n              collections={props.collections}\n              handleDisplayChange={handleDisplayChange}\n              removeItem={removeItem}\n            />\n          </Col>\n        </Row>\n      </div>\n    </Fragment>\n  );\n};\n\nconst TrayFormVerify = props => (\n  <Form>\n    <FormGroup>\n      <Label for=\"collections\">Collections</Label>\n      <Input type=\"select\" value={props.original.collection} onChange={(e) => props.handleVerifyOnChange(e)} name=\"collection\">\n      { props.collections\n        ? Object.keys(props.collections).map((items, idx) => (\n            <option key={idx}>{props.collections[items].name}</option>\n          ))\n        : <option></option>\n      }\n      </Input>\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"tray\">Tray\n      { props.verify.tray.length === props.trayLength\n        ? <Badge color=\"success\">{props.trayLength}</Badge>\n        : <Badge color=\"danger\">{props.verify.tray.length}</Badge>\n      }\n      </Label>\n      <Input type=\"text\" onKeyDown={props.handleEnter} name=\"tray\" value={props.verify.tray} onChange={(e) => props.handleVerifyOnChange(e)}  placeholder=\"Tray barcode\" />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"tray\">Barcodes</Label>\n      <Input type=\"textarea\" rows=\"10\" value={props.verify.barcodes} onChange={(e) => props.handleVerifyOnChange(e)} name=\"barcodes\" />\n    </FormGroup>\n    <Button onClick={(e) => props.handleVerifySubmit(e)} color=\"success\">Verify</Button>\n  </Form>\n);\n\nconst TrayFormOriginal = props => (\n  <div>\n  <Form className=\"sticky-top\">\n    <FormGroup>\n      <Label for=\"collections\">Collections\n    </Label>\n      <Input type=\"select\" value={props.original.collection} onChange={(e) => props.handleOriginalOnChange(e)} name=\"collection\">\n      <option>Select Collection</option>\n      { props.collections\n        ? Object.keys(props.collections).map((items, idx) => (\n            <option value={props.collections[items].name} key={idx}>{props.collections[items].name}</option>\n          ))\n        : <option></option>\n      }\n      </Input>\n    </FormGroup>\n    <FormGroup>\n    <Label for=\"tray\">Tray{ ' ' }\n    { props.original.tray.length === props.trayLength\n      ? <Badge color=\"success\">{props.trayLength}</Badge>\n      : <Badge color=\"danger\">{props.original.tray.length}</Badge>\n    }\n    </Label>\n      <Input type=\"text\" name=\"tray\" onKeyDown={props.handleEnter} value={props.original.tray} onChange={(e) => props.handleOriginalOnChange(e)}  placeholder=\"Tray barcode\" />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"tray\">Barcodes</Label>\n      <Input type=\"textarea\" value={props.original.barcodes} rows=\"10\" onChange={(e) => props.handleOriginalOnChange(e)} name=\"barcodes\" />\n    </FormGroup>\n    { props.original.tray.length === props.trayLength\n      ? <Button onClick={(e) => props.handleOriginalSubmit(e)} color=\"primary\">Submit</Button>\n      : <Button onClick={e => (e.preventDefault)} color=\"secondary\">Submit</Button>\n    }\n  </Form>\n  <br />\n  { Object.keys(props.verified).map(items => items).length\n    ? <ProcessForm processRequests={props.processRequests} />\n    : ''\n  }\n  </div>\n);\n\nconst ProcessForm = props => (\n  <Form>\n    <Button onClick={(e) => props.processRequests(e)} color=\"success\">Process data</Button>\n  </Form>\n);\n\nconst Display = props => (\n  Object.keys(props.data).map((items, idx) => {\n    return (\n      <Card key={items}>\n        <CardBody>\n          <dl className=\"row\">\n            <dt className=\"col-sm-3\">Tray barcode</dt>\n              <dd className=\"col-sm-9\">\n                {props.data[items].tray}\n              </dd>\n              <dt className=\"col-sm-3\">Item barcodes</dt>\n                <dd className=\"col-sm-9\">\n                  {props.data[items].barcodes}\n                </dd>\n              <dt className=\"col-sm-3\">Collection</dt>\n              <dd className=\"col-sm-9\">\n                {props.data[items].collection}\n              </dd>\n          </dl>\n          <Button color=\"danger\" onClick={() => props.removeItem(items)}>Delete</Button>\n        </CardBody>\n      </Card>\n    );\n  })\n);\n\nexport default NewTray;\n","import React, { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value] \n  );\n\n  return debouncedValue;\n}","import {\n  collections,\n  managetray,\n  pagingslips,\n  searchaleph,\n  shelfsearchall,\n  statistics,\n  titlesearch,\n  oclcsearch,\n  callnumbersearch,\n  traysearch,\n  internalrequests,\n  history,\n  shelfmanagement,\n  settings,\n  trayAPI,\n  searchalephpost\n  } from '../config/endpoints';\nimport Alerts from '../components/alerts';\n\nclass ContentSearch {\n\n  collections = async () => {\n    let search = await this.search(`${collections}`)\n    return search\n  }\n\n  setting = async () => {\n    let search = await this.search(settings)\n    return search\n  }\n\n  autocomplete = async (value) => {\n    let search = await this.search(`${trayAPI}auto-complete-tray/?query=${value}`)\n    return search\n  }\n\n  traymanagement = async (value) => {\n\n    let search = await this.search(`${managetray}?query=${value.replace(/[^0-9]+/g, '')}`)\n    return search\n  }\n\n  shelfmanagement = async (value) => {\n    let search = await this.search(`${shelfsearchall}?query=${value}`)\n    return search\n  }\n\n  traySearch = async (value) => {\n    value.replace('SM', '')\n    let search = await this.search(`${traysearch}?query=${value.replace(/[^0-9]+/g, '')}`)\n    return search\n  }\n\n  pagingSlips = async (day) => {\n    let search = await this.search(`${pagingslips}?day=${day}`)\n    return search\n  }\n\n  recordData = async (barcodes) => {\n    let search = await this.searchPost(`${searchalephpost}`, barcodes)\n    return search\n  }\n\n  reports = async (endpoint, query) => {\n    let search = await this.search(`${statistics}${endpoint}${query}`)\n    return search\n  }\n\n  searchAleph = async (data) => {\n    let search = await this.search(`${searchaleph}?${data}`)\n    return search\n  }\n\n  getInternalRequests = async (completed) => {\n    let search = await this.search(`${internalrequests}status?completed=${completed}`)\n    return search\n  }\n\n  trayShelfSearch = async (value) => {\n    let search = await this.search(`${shelfmanagement}?query=${value.replace(/[^0-9]+/g, '')}`)\n    return search\n  }\n\n  ill = async (type, query) => {\n    let search = ''\n    switch(type){\n      case 'title':\n        search = await this.search(`${titlesearch}?query=${query}`)\n      break;\n      case 'oclc':\n        search = await this.search(`${oclcsearch}?query=${query}`)\n      break;\n      case 'callnumber':\n        search = await this.search(`${callnumbersearch}?query=${query}`)\n      break;\n      default:\n        search = await this.search(`${titlesearch}?query=${query}`)\n      break;\n    }\n    return search\n  }\n\n  getHistory = async () => {\n    const search = await this.search(`${history}?sort=-timestamp`)\n    return search\n  }\n\n  searchHistory = async query => {\n    const search = await this.search(`${history}search?query=${query}`)\n    return search\n  }\n\n\n  search = async (string) => {\n    const storage = JSON.parse(sessionStorage.getItem('account'))\n    const { account } = storage || ''\n    const { access_token } = account || ''\n    try {\n      let response = await fetch(string.includes('?') ? `${string}&access-token=${access_token}` : `${string}?access-token=${access_token}`)\n      return this.responseHandling(response)\n    } catch (e) {\n      this.catchError('', e)\n    }\n  }\n\n  searchPost = async (string, data) => {\n    const storage = JSON.parse(sessionStorage.getItem('account'))\n    const { account } = storage || ''\n    const { access_token } = account || ''\n    try {\n      let response =  await fetch(`${string}?access-token=${access_token}`, {\n        method: \"POST\",\n        // headers: {\n        //   \"Access-Control-Expose-Headers\": \"X-Pagination-Total-Count, X-Pagination-Current-Page, X-Pagination-Page-Count, X-Pagination-Per-Page\",\n        //   'Access-Control-Allow-Origin': '*',\n        //   'Content-ype': 'application/json; charset=UTF-8',\n        // },\n        body: JSON.stringify(data)\n      })\n       return this.responseHandling(response)\n    } catch(e) {\n      this.catchError('', e)\n    }\n  }\n\n  responseHandling = async response => {\n    switch(response.status){\n      case 200:\n      case 201:\n      case 304:\n        return await response.json()\n      break;\n      case 204:\n        return {}\n      case 400:\n        return await this.catchError('Bad Request', response.statusText)\n      break;\n      case 401:\n      case 403:\n        return await this.catchError('Authentication failed', response.statusText)\n      break;\n      case 404:\n        return await this.catchError(\"Doesn't exist\", response.statusText)\n      break;\n      case 405:\n        return await this.catchError('Method not allowed', response.statusText)\n      break;\n      case 422:\n        return await this.catchError('Data Validation Fail', response.statusText)\n      break;\n      case 500:\n        return await this.catchError('Internal Server error', response.statusText)\n      break;\n      default:\n        return await this.catchError('There was an error.  Check your internet connection', '')\n    }\n  }\n\n  catchError = (value, e) => {\n    const error = {\n      name: value,\n      message: e\n    }\n    return Alerts.error(error)\n  }\n\n}\n\nconst contentSearch = new ContentSearch();\nexport default contentSearch;\n","import React, { useReducer, useEffect } from 'react';\nimport Load from '../util/load';\nimport { success, failure } from '../components/toastAlerts';\nimport ContentSearch from '../util/search';\nimport { Row, Col, Form, Button, Input, Alert, Card, CardBody } from 'reactstrap';\n\nconst initialState = {\n  collections: [],\n  collection: ''\n};\n\nconst collectionReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_COLLECTIONS':\n      return {\n        ...state,\n        collections: action.collections\n      };\n    case 'UPDATE_COLLECTION_FORM':\n      return {\n        ...state,\n        collection: action.collections\n      };\n    case 'UPDATE_COLLECTIONS':\n      return {\n        ...state,\n        collections: action.collections\n      };\n    default:\n      return state;\n  }\n};\n\nfunction ManageCollections(props) {\n  const [data, dispatch] = useReducer(collectionReducer, initialState);\n\n  useEffect(() => {\n    collections()\n  }, []);\n\n  const collections = async () => {\n    const search = await ContentSearch.collections();\n    dispatch({ type: \"ADD_COLLECTIONS\", collections: search});\n  };\n\n  const handleFormChange = (e) => {\n    dispatch({ type: \"UPDATE_COLLECTION_FORM\", collections: e.target.value});\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    const updateData = {\n      'name' : data.collection\n    };\n    const results = await Load.createNewCollection(updateData);\n    if (results) {\n      success(\"New collection successfully created\");\n      collections();\n      props.newCollections();\n    } else {\n      failure(\"Unable to create collection\");\n    }\n  };\n\n  const handleUpdateFormChange = (e, key) => {\n    const collection = data.collections;\n    collection[key][\"name\"] = e.target.value;\n    dispatch({ type: \"UPDATE_COLLECTIONS\", collections: collection});\n  };\n\n  const handleUpdateSubmit = async(e, key) => {\n    if (window.confirm('This will update all items in this collection. Are you sure you want to update?')) {\n      const update = await Load.updateCollection(data.collections[key]);\n      if (update) {\n        success('Collections updated');\n      } else {\n        failure(\"There was a problem updating this collection\");\n      }\n    }\n    collections();\n    props.newCollections();\n  };\n\n  const handleDeleteSubmit = async(e, data) => {\n    e.preventDefault();\n    const hasItems = await Load.collectionHasItems(data);\n    if (hasItems) {\n      failure(\"This collection cannot be deleted because it has items tied to it\");\n    } else {\n      if (window.confirm(\"Delete this collection? This action can only be undone by the database administrator.\")) {\n        const set = await Load.deleteCollection({id: data.id});\n        if (set) {\n          success('Collection removed');\n        } else {\n          failure('Collection could not be removed');\n        }\n      }\n    }\n    collections();\n    props.newCollections();\n  };\n\n  return (\n    <div>\n      <div style={{backgroundColor: \"#fff\", padding: '20px', textAlign: \"middle\", marginTop: \"20px\"}}>\n        <DisplayForm\n          handleFormChange={handleFormChange}\n          handleFormSubmit={handleFormSubmit}\n          collection={data.collection}\n        />\n      </div>\n      <Card>\n        <CardBody>\n          {Object.keys(data.collections).map((items, idx) => {\n            return (\n              <Display\n                data={data.collections[items]}\n                index={idx}\n                key={idx}\n                handleUpdateSubmit={handleUpdateSubmit}\n                handleUpdateFormChange={handleUpdateFormChange}\n                handleDeleteSubmit={handleDeleteSubmit}\n              />\n            );\n          })}\n        </CardBody>\n      </Card>\n    </div>\n  );\n\n}\n\nexport default ManageCollections;\n\nconst DisplayForm = ({ handleFormChange, handleFormSubmit, collection }) => (\n  <Form onSubmit={(e) => handleFormSubmit(e)}>\n    <Row>\n      <Col md=\"8\">\n        <Input type=\"text\" value={collection} onChange={(e) => handleFormChange(e)} name=\"collection\" placeholder=\"Add a new collection...\" />\n      </Col>\n      <Col md=\"2\">\n        <Button color=\"primary\">Submit</Button>\n      </Col>\n    </Row>\n  </Form>\n);\n\nconst Display = ({ data, index, handleUpdateFormChange, handleUpdateSubmit, handleDeleteSubmit }) => {\n  return (\n    <div key={index} style={{paddingBottom: \"20px\"}}>\n      <Row>\n        <Col md=\"8\">\n          <Input type=\"text\" onChange={(e) => handleUpdateFormChange(e, index)} value={data.name} name=\"name\" />\n        </Col>\n        <Col>\n          <Button color=\"primary\" style={{\"marginRight\": \"10px\"}} onClick={(e) => {handleUpdateSubmit(e, index)}}>Update</Button>\n          <Button color=\"danger\" onClick={(e) => {handleDeleteSubmit(e, data)}}>Delete</Button>\n        </Col>\n      </Row>\n    </div>\n  )\n};\n","import React, { useState, useEffect, useReducer } from 'react';\nimport { Button,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane,\n    Table,\n  } from 'reactstrap';\nimport Load from '../util/load';\nimport { success, failure } from '../components/toastAlerts';\nimport classnames from 'classnames';\n\nfunction ManageUsers() {\n  const [users, setUsers] = useState([]);\n  const [level, setLevel] = useState(0);\n  const [password, setPassword] = useState(\"\");\n  const [activeTab, setActiveTab ] = useState(\"user_update\");\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const toggle = tab => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n    getUsers();\n  }\n\n  async function getUsers() {\n    const search = await Load.getUsers();\n    setUsers(search);\n  };\n\n  const handleSubmit = async (e, index) => {\n    e.preventDefault();\n    const data = users[index];\n    const update = await Load.accountUpdate(data);\n    users[index].password = \"\";\n    setPassword(\"\");\n    if (update) {\n      success(\"Account successfully updated\");\n    } else {\n      failure(\"There was an error updating this account. Please make sure that the level is between 0 and 100.\");\n    }\n  };\n\n  const updateLevel = (e, index) => {\n    e.preventDefault();\n    users[index].level = e.target.value;\n    setLevel(e.target.value);\n  };\n\n  const updatePassword = (e, index) => {\n    e.preventDefault();\n    users[index].password = e.target.value;\n    setPassword(e.target.value);\n  };\n\n  const handleDelete = (e, index) => {\n    e.preventDefault();\n    if (window.confirm(\"Delete this user? This action can only be undone by the database administrator.\")) {\n      const data = users[index];\n      const deleteAccount = Load.accountDelete(data);\n      if (deleteAccount) {\n          success('Account successfully deleted');\n          getUsers();\n      } else {\n        failure(\"There was an error deleting this account\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\" style={{backgroundColor: '#fff', marginTop: \"50px\", padding: \"20px\"}}>\n      <div style={{paddingBottom: '50px'}}>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === 'user_update' })}\n              onClick={() => { toggle('user_update'); }}\n            >\n            Users\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === 'user_creation' })}\n              onClick={() => { toggle('user_creation'); }}\n            >\n            Create new user\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <br />\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"user_update\">\n            <UserUpdate\n              users={users}\n              updatePassword={updatePassword}\n              updateLevel={updateLevel}\n              handleSubmit={handleSubmit}\n              handleDelete={handleDelete}\n            />\n          </TabPane>\n          <TabPane tabId=\"user_creation\">\n            <UserCreation />\n          </TabPane>\n        </TabContent>\n      </div>\n    </div>\n  );\n};\n\nconst UserUpdate = ({ users, updatePassword, updateLevel, handleSubmit, handleDelete }) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Password</th>\n          <th>Level</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users && users.length ? Object.keys(users).map((items, index) =>\n          <tr key={index}>\n            <td>{users[items].name}</td>\n            <td>{users[items].email}</td>\n            <td><Input type=\"password\" name=\"password\" value={users[items].password} onChange={e => updatePassword(e, index)} /></td>\n            <td><Input type=\"number\" name=\"level\" value={users[items].level} min=\"0\" max=\"100\" onChange={e => updateLevel(e, index)} /></td>\n            <td>\n              <Button color=\"primary\" onClick={(e) => handleSubmit(e, index)} style={{\"marginRight\": \"10px\"}}>Update</Button>\n              <Button color=\"danger\" onClick={(e) => handleDelete(e, index)}>Delete</Button>\n            </td>\n          </tr>\n        ) : null}\n      </tbody>\n    </Table>\n  );\n}\n\nconst UserCreation = () => {\n\n  const initialState = {\n    createNewAccount : {\n      email: '',\n      password: '',\n      name: '',\n      level: '',\n    }\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'CREATE_ACCOUNT':\n        const createNewAccount = state.createNewAccount;\n        createNewAccount[action.payload.name] = action.payload.value;\n        return {\n          ...state,\n          createNewAccount,\n        };\n      case 'RESET':\n        return {\n          ...state,\n          createNewAccount: {\n            email: '',\n            password: '',\n            name: '',\n            level: '',\n          }\n        };\n      default:\n        throw new Error();\n    }\n  };\n\n  const [ state, dispatch ] = useReducer(reducer, initialState);\n\n  const handleCreationChange = e => {\n    dispatch({\n      type: 'CREATE_ACCOUNT',\n      payload: {\n        name: e.target.name,\n        value: e.target.value,\n      }});\n  };\n\n  const handleAccountCreationSubmit = async (e) => {\n    e.preventDefault();\n    const data = {\n      email: state.createNewAccount.email,\n    };\n    const account = await Load.verifyAccount(data);\n    if (account) {\n      failure(\"An account with this email address already exists. If it does not appear in the list, it may have been deleted. Contact the system administrator to restore a deleted account if necessary.\");\n    } else {\n      const create = await Load.createAccount(state.createNewAccount);\n      if (create) {\n        dispatch({\n          type: 'RESET',\n          payload: {}\n        });\n        success('Account successfully created');\n      } else {\n        failure(\"There was a problem creating this account\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Form className=\"form-signin\">\n        <FormGroup>\n          <Label for=\"email\">Email address</Label>\n          <Input type=\"email\" value={state.createNewAccount.email} pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\" name=\"email\" onChange={(e) => handleCreationChange(e)} required autoFocus />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password\">Password</Label>\n          <Input type=\"password\" name=\"password\" value={state.createNewAccount.password} onChange={(e) => handleCreationChange(e)} required />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"name\">Name</Label>\n          <Input type=\"text\" name=\"name\" value={state.createNewAccount.name} onChange={(e) => handleCreationChange(e)} required />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"level\">Level</Label>\n          <Input type=\"number\" name=\"level\" min=\"0\" max=\"100\" value={state.createNewAccount.level} onChange={e => handleCreationChange(e)} required />\n        </FormGroup>\n        <Button color=\"primary\" className=\"btn-block\" onClick={(e) => handleAccountCreationSubmit(e)} type=\"submit\">Create account</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default ManageUsers;\n","import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n  } from 'reactstrap';\nimport { Link, NavLink } from 'react-router-dom';\n\n\nexport default class Header extends Component {\n  state = {\n    isOpen: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  };\n\n  logOut = (e) => {\n    e.preventDefault();\n    sessionStorage.clear();\n    window.location.href = 'http://localhost:3000';\n  };\n\n  render() {\n    const storage = JSON.parse(sessionStorage.getItem('account'));\n    const { account } = storage || '';\n    const { level } = account || '';\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"#!\">SIS &rsquo;23 (Version 4.0.0)</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          {sessionStorage.getItem('account') ?\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                {\n                <NavItem>\n                  <NavLink className=\"nav-link\" activeStyle={{ color: '#007BFF' }} to=\"/new-tray\">New tray</NavLink>\n                </NavItem>\n                /*\n                <NavItem>\n                  <NavLink className=\"nav-link\" activeStyle={{ color: '#007BFF' }} to=\"/shelf\">Shelf</NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Paging\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      <NavLink style={{color: 'black'}} activeStyle={{ color: '#007BFF' }} className=\"nav-link\" to=\"/paging-add\">Add</NavLink>\n                    </DropdownItem>\n                    <DropdownItem>\n                      <NavLink style={{color: 'black'}} activeStyle={{ color: '#007BFF' }} className=\"nav-link\" to=\"/paging-display\">Pick</NavLink>\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <NavItem>\n                  <NavLink className=\"nav-link\" activeStyle={{ color: '#007BFF' }} to=\"/search\">Search</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" activeStyle={{ color: '#007BFF' }} to=\"/history\">History</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" activeStyle={{ color: '#007BFF' }} to=\"/reports\">Reports</NavLink>\n                </NavItem>\n                */}\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Manage\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      <NavLink style={{color: 'black'}} activeStyle={{ color: '#007BFF' }} className=\"nav-link\" to=\"/collections\">Collections</NavLink>\n                    </DropdownItem>\n                    {/* <DropdownItem>\n                      <NavLink style={{color: 'black'}} activeStyle={{ color: '#007BFF' }} className=\"nav-link\" to=\"/tray-management\">Tray</NavLink>\n                    </DropdownItem>\n                    <DropdownItem>\n                      <NavLink style={{color: 'black'}} activeStyle={{ color: '#007BFF' }} className=\"nav-link\" to=\"/shelf-management\">Shelf</NavLink>\n                    </DropdownItem> */}\n                  {level >= 100 ?\n                    <DropdownItem>\n                      <NavLink style={{color: 'black'}} activeStyle={{ color: '#007BFF' }} className=\"nav-link\" to=\"/users\">Users</NavLink>\n                    </DropdownItem>\n                    : ''\n                  }\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <NavItem>\n                  <NavLink className=\"nav-link\" activeStyle={{ color: '#007BFF' }} to=\"#!\" onClick={(e) => this.logOut(e)}>Log out</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          : ''\n        }\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap'\n\nimport SISLogo from '../image/sis-logo.png'\nimport '../css/login.css'\n\nexport const LoginPage = ({ handleLoginChange, handleLoginSubmit, state }) => (\n  <div className=\"login-form\">\n  <Form className=\"form-signin\">\n    <div className=\"text-center mb-4\">\n      <img className=\"mb-4\" src={SISLogo} alt=\"SIS Logo\" width=\"172\" height=\"172\"/>\n    </div>\n    <FormGroup>\n      <Label for=\"email\">Email Address</Label>\n      <Input type=\"email\" name=\"email\" value={state.email} onChange={(e) => handleLoginChange(e)} placeholder=\"email address\" required autoFocus />\n    </FormGroup>\n    <FormGroup>\n      <Label for=\"password\">Password</Label>\n      <Input type=\"password\" name=\"password\" value={state.password} onChange={(e) => handleLoginChange(e)} placeholder=\"password\" required />\n    </FormGroup>\n    <Button color=\"primary\" className=\"btn-block\" onClick={(e) => handleLoginSubmit(e)} type=\"submit\">Login</Button>{ ' '}\n    {/* <Button color=\"primary\" className=\"btn-block\" onClick={(e) => handleCreateNewPage(e)} type=\"submit\">Create new account</Button> */}\n  </Form>\n  </div>\n)\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './css/bootstrap.css';\nimport './css/index.css';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport {\n  NewTray,\n  // Shelf,\n  // AddPaging,\n  // PagingDisplay,\n  // Reports,\n  // History,\n  // Search,\n  ManageCollections,\n  // ManageTrays,\n  // ManageShelves,\n  ManageUsers\n} from './containers';\nimport Header from './components/header';\nimport ContentSearch from './util/search';\nimport { LoginPage } from './components/login';\nimport Load from './util/load';\nimport localforage from 'localforage';\n// import { createBrowserHistory } from 'history';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { failure } from './components/toastAlerts'\n\n// const history = createBrowserHistory();\n\nexport default class Main extends Component {\n\n  state = {\n    collections: {},\n    email: '',\n    password: '',\n    loggedIn: false,\n    createAccount: false,\n    type: '',\n    name: '',\n    settings: {},\n  };\n\n  componentDidMount = async () => {\n    if (sessionStorage.getItem('account') || this.state.loggedIn === true ) {\n      this.collections();\n      this.settings();\n    }\n  };\n\n  localStorage = async (key) => {\n    const results = await localforage.getItem(key);\n    return results;\n  };\n\n  collections = async () => {\n    const search = await ContentSearch.collections();\n    this.setState({ collections: search });\n  };\n\n  settings = async () => {\n    let settings = await this.localStorage('settings');\n    if (!settings) {\n      settings = await ContentSearch.setting();\n      localforage.setItem('settings', settings);\n    }\n\n    this.setState({ settings: settings });\n  }\n\n  handleCreateNewPage = () => {\n    this.setState({\n      createAccount: true\n    });\n  };\n\n  handleLoginChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleLoginSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    const account = await Load.getAccount(data);\n    const { name, access_token, level } = account || '';\n    if (account && account.access_token) {\n      this.setState({\n        loggedIn: true,\n        name: name,\n        access_key: access_token,\n        level: level\n      }, () => {\n        sessionStorage.setItem('account', JSON.stringify({loggedIn: true, account }));\n        this.collections();\n      })\n    } else {\n      failure('There was a problem with your username or password');\n    }\n  }\n\n\n  loginPage = () => {\n    this.setState({\n      createAccount: false\n    });\n  };\n\n  render() {\n    const { loggedIn, settings} = this.state;\n    return (\n      <div>\n        <ToastContainer />\n        <Router basename=\"/sis-webapp\">\n          <Header\n            name={this.state.name}\n            level={this.state.level}\n          />\n          {sessionStorage.getItem('account') || loggedIn === true ?\n            <div className=\"container-fluid\">\n              <Switch>\n                <Route path=\"/new-tray\" render={() => (\n                  <NewTray\n                    collections={this.state.collections}\n                    settings={settings}\n                  />\n                )}/>\n                {/* <Route exact path=\"/\" render={() => (\n                  <Trays\n                    collections={this.state.collections}\n                    settings={settings}\n                  />\n                )}/>\n                <Route path=\"/shelf\" render={() => (\n                  <Shelf\n                    collections={this.state.collections}\n                    settings={settings}\n                  />\n                )}/>\n                <Route path=\"/manage-trays\" render={() => (\n                  <ManageTrays\n                    collections={this.state.collections}\n                  />\n                )}/>\n                <Route path=\"/manage-shelves\" render={() => (\n                  <ManageShelves\n                    collections={this.state.collections}\n                  />\n                )}/>\n                <Route path=\"/paging-add\" render={() => (\n                  <AddPaging\n                    settings={settings}\n                  />\n                )}/>\n                <Route path=\"/paging-display\" render={() => (\n                  <PagingDisplay\n                    settings={settings}\n                  />\n                )}/>\n                <Route path=\"/reports\" render={() => (\n                  <Reports\n                    settings={settings}\n                  />\n                )}/>\n                <Route path=\"/history\" render={() => (\n                  <History\n                    settings={settings}\n                  />\n                )}/>\n                <Route path=\"/search\" render={() => (\n                  <Search\n                    settings={settings}\n                  />\n                )}/> */}\n                <Route path=\"/manage-collections\" render={() => (\n                  <ManageCollections\n                    collections={this.state.collections}\n                    newCollections={this.collections}\n                  />\n                )}/>\n                <Route path=\"/users\" render={() => (\n                  <ManageUsers\n                    settings={settings}\n                  />\n                )}/>\n              </Switch>\n            </div>\n            :\n            <LoginPage\n              handleCreateNewPage={this.handleCreateNewPage}\n              handleLoginChange={this.handleLoginChange}\n              handleLoginSubmit={this.handleLoginSubmit}\n              state={this.state}\n            />\n          }\n        </Router>\n      </div>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/sis-logo.d4646eab.png\";"],"sourceRoot":""}